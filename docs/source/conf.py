#!/usr/bin/env python3
# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.
#
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#

import os
import sys

sys.path.insert(0, os.path.abspath("."))
import pytorch_sphinx_theme2

html_theme = "pytorch_sphinx_theme2"
html_theme_path = [pytorch_sphinx_theme2.get_html_theme_path()]

# -- General configuration ------------------------------------------------

# Required version of sphinx is set from docs/requirements.txt

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.autosummary",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.duration",
    "sphinx.ext.linkcode",
    "sphinx_tabs.tabs",
    "sphinx_design",
    "sphinx_gallery.gen_gallery",
    "sphinx_copybutton",
    "myst_parser",
    "sphinxcontrib.mermaid",
    "sphinx_sitemap",
    "pytorch_sphinx_theme2",
    "sphinxext.opengraph",
]

sphinx_gallery_conf = {
    "examples_dirs": "tutorials_source",  # path to your sphinx-gallery examples source
    "gallery_dirs": "tutorials",  # path to where to save sphinx-gallery generated output
    "filename_pattern": "./*.py",  # any .py file in tutorials_source will be built by sphinx-gallery
    "backreferences_dir": "gen_modules/backreferences",  # path to store the backreferences
    "remove_config_comments": True,
}

### TODO: Delete this when we have content
suppress_warnings = [
    "toc.unlisted",
]
###

napoleon_use_ivar = True
napoleon_numpy_docstring = False
napoleon_google_docstring = True
project = "torchao"

# -- OpenGraph Protocol settings --
ogp_site_url = "http://pytorch.org/ao"
ogp_image = "https://pytorch.org/assets/images/social-share.jpg"

# Get TORCHAO_VERSION_DOCS during the build.
torchao_version_docs = os.environ.get("TORCHAO_VERSION_DOCS", None)
print(f"torchao_version_docs: {torchao_version_docs}")

# The code below will cut version displayed in the dropdown like this:
# by default "main" is set.
# tags like v0.1.0 or with the -rc suffix like v0.1.0-rc3 = > 0.1
# the version varible is used in layout.html: https://github.com/pytorch/torchao/blob/main/docs/source/_templates/layout.html#L29
version = release = "main"
if torchao_version_docs:
    if torchao_version_docs.startswith("refs/tags/v"):
        version = ".".join(
            torchao_version_docs.split("/")[-1].split("-")[0].lstrip("v").split(".")[:2]
        )
    elif torchao_version_docs.startswith("refs/heads/release/"):
        version = torchao_version_docs.split("/")[-1]
print(f"Version: {version}")
html_title = " ".join((project, version, "documentation"))

# Determine if this is a release build
RELEASE = version != "main"

# Configure version for switcher if you have multiple versions
switcher_version = "main" if not RELEASE else version

# Add any paths that contain templates here, relative to this directory.
theme_variables = pytorch_sphinx_theme2.get_theme_variables()
templates_path = [
    "_templates",
    os.path.join(os.path.dirname(pytorch_sphinx_theme2.__file__), "templates"),
]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = {
    ".rst": "restructuredtext",
    ".md": "markdown",
}

# The master toctree document.
master_doc = "index"

# General information about the project.
copyright = "2024-present, torchao Contributors"
author = "torchao Contributors"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# Theme configuration is set earlier in the file (lines 29-30)

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "navigation_with_keys": False,
    "analytics_id": "GTM-T8XT4PS",
    "icon_links": [
        {
            "name": "X",
            "url": "https://x.com/PyTorch",
            "icon": "fa-brands fa-x-twitter",
        },
        {
            "name": "GitHub",
            "url": "https://github.com/pytorch/ao",
            "icon": "fa-brands fa-github",
        },
        {
            "name": "Discourse",
            "url": "https://dev-discuss.pytorch.org/",
            "icon": "fa-brands fa-discourse",
        },
        {
            "name": "PyPi",
            "url": "https://pypi.org/project/torchao/",
            "icon": "fa-brands fa-python",
        },
    ],
    "use_edit_page_button": True,
    "navbar_center": "navbar-nav",
    # Option 2: Display version in navbar (since torchao is relatively new)
    "navbar_start": ["pytorch_version"],
    "display_version": True,
    "announcement": None,
}

html_logo = "_static/img/pytorch-logo-dark.svg"

html_css_files = ["css/custom.css"]

# Base URL for sitemap generation
html_baseurl = "https://pytorch.org/ao/"

# Configure date info for "Created On | Last Updated" feature
html_context = {
    "date_info": {
        # Optional: Add paths to skip for performance optimization
        "paths_to_skip": [
            "gen_modules/",  # Skip auto-generated API reference modules
            "tutorials/",  # Skip auto-generated tutorial gallery
        ],
    },
    "theme_variables": theme_variables,
    "display_github": True,
    "github_user": "pytorch",
    "github_repo": "ao",
    "github_version": "main",
    "doc_path": "docs/source",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "PyTorchdoc"


autosummary_generate = True

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
    "torch": ("https://pytorch.org/docs/stable/", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
}

# -- A patch that prevents Sphinx from cross-referencing ivar tags -------
# See http://stackoverflow.com/a/41184353/3343043


# Custom directives are now handled by pytorch_sphinx_theme2
# No need to register them manually


import inspect


def linkcode_resolve(domain, info):
    """Link API objects to GitHub source code."""
    if domain != "py":
        return None
    if not info["module"]:
        return None

    try:
        # Import torchao module
        import torchao

        module = __import__(info["module"], fromlist=[""])
        obj = module
        for part in info["fullname"].split("."):
            obj = getattr(obj, part)
        # Get the source file and line number
        obj = inspect.unwrap(obj)
        fn = inspect.getsourcefile(obj)
        _, lineno = inspect.getsourcelines(obj)
    except Exception:
        return None

    # Get the relative path from the torchao package
    try:
        fn = os.path.relpath(fn, start=os.path.dirname(torchao.__file__))
    except Exception:
        return None

    # Determine the tag/branch based on the version
    if RELEASE and version != "main":
        # For release versions, use the version tag
        tag = f"v{version}"
    else:
        # For development versions, use main branch
        tag = "main"

    return f"https://github.com/pytorch/ao/blob/{tag}/torchao/{fn}#L{lineno}"


def setup(app):
    """Configure Sphinx app for pytorch_sphinx_theme2 features."""
    app.config.add_last_updated = True
